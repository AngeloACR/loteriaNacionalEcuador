(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~inquiry-inquiry-module~landing-landing-module~lottery-lottery-module~payment-payment-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/shared/components/error/error.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/shared/components/error/error.component.html ***!
  \****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"blackBox\" (click)=\"close()\"></div>\n\n<div class=\"logBox\">\n  <div class=\"closeButton\">\n    <button class=\"closeB\" (click)=\"close()\">X</button>\n  </div>\n  <p class=\"errorHeader\">{{title}}</p>\n  <p class=\"errorContent\">{{msg}}</p>\n  <button type=\"button\" class=\"formButton\" (click)=\"close()\"> \n    <p>CERRAR</p>\n  </button>\n\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/shared/components/loader/loader.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/shared/components/loader/loader.component.html ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"blackBox\"></div>\n\n<div class=\"loadBox\">\n  <div>\n    <img class=\"loadLogo\" [src]=\"logoPath\" alt=\"\" />\n    <img class=\"loadIcon\" [src]=\"loaderPath\" alt=\"\" />\n  </div>\n  <p class=\"loadText\">{{ message }}</p>\n</div>\n");

/***/ }),

/***/ "./src/app/lottery/services/lottery.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/lottery/services/lottery.service.ts ***!
  \*****************************************************/
/*! exports provided: LotteryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LotteryService", function() { return LotteryService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");



let LotteryService = class LotteryService {
    constructor(http) {
        this.http = http;
        this.localSource = "http://127.0.0.1:2022";
        this.testSource = "https://ventas-api-prueba.loteria.com.ec";
        this.productionSource = "https://ventas-api.loteria.com.ec";
        this.mySource = this.localSource;
        this.obtenerAnimalesSelecionados();
        this.obtenerAnimalesTabs();
    }
    formatNumber(number) {
        // Create our number formatter.
        var formatter = new Intl.NumberFormat("en-US", {
            style: "currency",
            currency: "USD",
        });
        return formatter.format(number);
    }
    getAuthData() {
        let data = JSON.parse(localStorage.getItem("userData"));
        let response = {
            user: "",
            lotteryToken: "",
        };
        if (data) {
            let lotteryToken = data.lotteryToken;
            let user = data.playerDocument;
            if (data.user_ == "italtronicprep")
                user = data.user_;
            response = {
                lotteryToken,
                user,
            };
        }
        return response;
    }
    obtenerDescuentos() {
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        headers = headers.append("Content-Type", "application/json");
        //let endpoint = "/inquiry";
        let address = "/ventas";
        let endpoint = "/getDescuentos";
        let authData = this.getAuthData();
        address = this.mySource + address + endpoint;
        return new Promise((resolve, reject) => {
            this.http
                .get(address, {
                params: {
                    lotteryToken: authData.lotteryToken,
                    user: authData.user,
                },
                headers: headers,
            })
                .subscribe((data) => {
                let descuentos = data;
                resolve(descuentos);
            }, (error) => {
                reject(new Error(error.error.message));
            });
        });
    }
    obtenerSorteo(token, loteria) {
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        headers = headers.append("Content-Type", "application/json");
        //let endpoint = "/inquiry";
        let address = "";
        let endpoint = `/cache/sorteosDisponibles`;
        let authData = this.getAuthData();
        switch (loteria) {
            case 1:
                address = "/loteria";
                break;
            case 2:
                address = "/lotto";
                break;
            case 5:
                address = "/pozo";
                break;
            case 14:
                address = "/millonaria";
                break;
        }
        address = this.mySource + address + endpoint;
        return new Promise((resolve, reject) => {
            this.http
                .get(address, {
                params: {
                    lotteryToken: authData.lotteryToken,
                    user: authData.user,
                },
                headers: headers,
            })
                .subscribe((data) => {
                let sorteosDisponibles = data;
                sorteosDisponibles.sort(this.ordenaSorteos);
                resolve(sorteosDisponibles);
            }, (error) => {
                reject(new Error(error.error.message));
            });
        });
    }
    obtenerSeries(sorteo) {
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        headers = headers.append("Content-Type", "application/json");
        let address = "/millonaria";
        let endpoint = "/getSeries";
        let authData = this.getAuthData();
        address = this.mySource + address + endpoint;
        return new Promise((resolve, reject) => {
            this.http
                .get(address, {
                params: {
                    lotteryToken: authData.lotteryToken,
                    user: authData.user,
                    sorteo,
                },
                headers: headers,
            })
                .subscribe((data) => {
                let aux = data.map((element) => {
                    return {
                        serie: element,
                        status: false,
                    };
                });
                resolve(aux);
            }, (error) => {
                reject(new Error(error.error.message));
            });
        });
    }
    ordenaSorteos(a, b) {
        let a1 = a["sorteo"];
        let b1 = b["sorteo"];
        return a1 - b1;
    }
    obtenerTickets(token, loteria, sorteo, combinacion, combinacionFigura, tipoSeleccion) {
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        headers = headers.append("Content-Type", "application/json");
        let address = "";
        let endpoint = "";
        let authData = this.getAuthData();
        let body = {
            sorteo,
            lotteryToken: authData.lotteryToken,
            user: authData.user,
            combinacion,
            combinacionFigura,
            tipoSeleccion,
        };
        endpoint = `${endpoint}/combinacionesDisponibles`;
        switch (loteria) {
            case 1:
                address = "/loteria";
                address = this.mySource + address + endpoint;
                return new Promise((resolve, reject) => {
                    this.http.post(address, body, { headers: headers }).subscribe((data) => {
                        let combinacionesDisponibles = data.combinaciones;
                        resolve(combinacionesDisponibles);
                    }, (error) => {
                        reject(new Error(error.error.message));
                    });
                });
                break;
            case 2:
                address = "/lotto";
                address = this.mySource + address + endpoint;
                return new Promise((resolve, reject) => {
                    this.http.post(address, body, { headers: headers }).subscribe((data) => {
                        let combinacionesDisponibles = data.combinaciones;
                        resolve(combinacionesDisponibles);
                    }, (error) => {
                        reject(new Error(error.error.message));
                    });
                });
                break;
            case 5:
                address = "/pozo";
                endpoint = `${endpoint}/combinacionesDisponibles`;
                address = this.mySource + address + endpoint;
                return new Promise((resolve, reject) => {
                    this.http.post(address, body, { headers: headers }).subscribe((data) => {
                        let combinacionesDisponibles = data.combinaciones;
                        resolve(combinacionesDisponibles);
                    }, (error) => {
                        reject(new Error(error.error.message));
                    });
                });
                break;
            case 14:
                address = "/millonaria";
                endpoint = `${endpoint}/combinacionesDisponibles`;
                address = this.mySource + address + endpoint;
                return new Promise((resolve, reject) => {
                    this.http.post(address, body, { headers: headers }).subscribe((data) => {
                        let combinacionesDisponibles = data.combinaciones;
                        resolve(combinacionesDisponibles);
                    }, (error) => {
                        reject(new Error(error.error.message));
                    });
                });
                break;
        }
    }
    obtenerImagenBoleto(tipoLoteria, sorteo) {
        let sourceBoletos = "http://127.0.0.1/uploads/boletos/";
        return new Promise((resolve, reject) => {
            let boletoAddress = `${sourceBoletos}B${tipoLoteria}${sorteo}.png`;
            resolve(boletoAddress);
        });
    }
    authUser(token) {
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        headers = headers.append("Content-Type", "application/json");
        let address = "http://localhost:8000";
        let endpoint = "/";
        let body = {
            token,
        };
        address = /* this.mySource +  */ address + endpoint;
        return new Promise((resolve, reject) => {
            this.http.post(address, body, { headers: headers }).subscribe((data) => {
                localStorage.setItem("userData", JSON.stringify(data));
                resolve(data);
            }, (error) => {
                reject(new Error(error.error.message));
            });
        });
    }
    obtenerMascota(mascota) {
        let mascotaPath;
        switch (mascota) {
            case "01":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Camaron.png";
                break;
            case "02":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Delfin.png";
                break;
            case "03":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Perro.png";
                break;
            case "04":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Llama.png";
                break;
            case "05":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Papagayo.png";
                break;
            case "06":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Conejo.png";
                break;
            case "07":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Mono.png";
                break;
            case "08":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Galapago.png";
                break;
            case "09":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Tucan.png";
                break;
            case "10":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Ballena.png";
                break;
            case "11":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Oso.png";
                break;
            case "12":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Foca.png";
                break;
            case "13":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Cangrejo.png";
                break;
            case "14":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Condor.png";
                break;
            case "15":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Iguana.png";
                break;
            case "16":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Caballo.png";
                break;
            case "17":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Rana.png";
                break;
            case "18":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Tiburon.png";
                break;
            case "19":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Caracol.png";
                break;
            case "20":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Oveja.png";
                break;
            case "21":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Gallo.png";
                break;
            case "22":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Abeja.png";
                break;
            case "23":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Mariposa.png";
                break;
            case "24":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Pez.png";
                break;
            case "25":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Pinguino.png";
                break;
            case "26":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Cocodrilo.png";
                break;
            case "27":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Vaca.png";
                break;
            case "28":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Chanchito.png";
                break;
            case "29":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Tigre.png";
                break;
            case "30":
                mascotaPath = "assets/mascotas/mascotas pozo millonario-Gato.png";
                break;
            default:
                break;
        }
        return mascotaPath;
    }
    obtenerAnimalesSelecionados() {
        this.animales = [
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Camaron.png",
                identificador: "01",
                nombre: "Camarón",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Cangrejo.png",
                identificador: "13",
                nombre: "Cangrejo",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Ballena.png",
                identificador: "10",
                nombre: "Ballena",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Condor.png",
                identificador: "14",
                nombre: "Cóndor",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Conejo.png",
                identificador: "06",
                nombre: "Conejo",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Delfin.png",
                identificador: "02",
                nombre: "Delfín",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Foca.png",
                identificador: "12",
                nombre: "Foca",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Galapago.png",
                identificador: "08",
                nombre: "Galápago",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Iguana.png",
                identificador: "15",
                nombre: "Iguana",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Llama.png",
                identificador: "04",
                nombre: "Llama",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Mono.png",
                identificador: "07",
                nombre: "Mono",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Oso.png",
                identificador: "11",
                nombre: "Oso",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Papagayo.png",
                identificador: "05",
                nombre: "Papagayo",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Perro.png",
                identificador: "03",
                nombre: "Perro",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Tucan.png",
                identificador: "09",
                nombre: "Tucán",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Caballo.png",
                identificador: "16",
                nombre: "Caballo",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Rana.png",
                identificador: "17",
                nombre: "Rana",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Tiburon.png",
                identificador: "18",
                nombre: "Tiburón",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Caracol.png",
                identificador: "19",
                nombre: "Caracol",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Oveja.png",
                identificador: "20",
                nombre: "Oveja",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Gallo.png",
                identificador: "21",
                nombre: "Gallo",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Abeja.png",
                identificador: "22",
                nombre: "Abeja",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Mariposa.png",
                identificador: "23",
                nombre: "Mariposa",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Pez.png",
                identificador: "24",
                nombre: "Pez",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Pinguino.png",
                identificador: "25",
                nombre: "Pingüino",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Cocodrilo.png",
                identificador: "26",
                nombre: "Cocodrilo",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Vaca.png",
                identificador: "27",
                nombre: "Vaca",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Chanchito.png",
                identificador: "28",
                nombre: "Chanchito",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Tigre.png",
                identificador: "29",
                nombre: "Tigre",
                status: false,
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Gato.png",
                identificador: "30",
                nombre: "Gato",
                status: false,
            },
        ];
        localStorage.setItem("animalesSeleccionados", JSON.stringify(this.animales));
    }
    obtenerCaracteristicasDeMascota(mascota) {
        let animales = [
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Camaron.png",
                identificador: "01",
                nombre: "Camarón",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Cangrejo.png",
                identificador: "13",
                nombre: "Cangrejo",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Ballena.png",
                identificador: "10",
                nombre: "Ballena",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Condor.png",
                identificador: "14",
                nombre: "Cóndor",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Conejo.png",
                identificador: "06",
                nombre: "Conejo",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Delfin.png",
                identificador: "02",
                nombre: "Delfín",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Foca.png",
                identificador: "12",
                nombre: "Foca",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Galapago.png",
                identificador: "08",
                nombre: "Galápago",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Iguana.png",
                identificador: "15",
                nombre: "Iguana",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Llama.png",
                identificador: "04",
                nombre: "Llama",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Mono.png",
                identificador: "07",
                nombre: "Mono",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Oso.png",
                identificador: "11",
                nombre: "Oso",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Papagayo.png",
                identificador: "05",
                nombre: "Papagayo",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Perro.png",
                identificador: "03",
                nombre: "Perro",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Tucan.png",
                identificador: "09",
                nombre: "Tucán",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Caballo.png",
                identificador: "16",
                nombre: "Caballo",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Rana.png",
                identificador: "17",
                nombre: "Rana",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Tiburon.png",
                identificador: "18",
                nombre: "Tiburón",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Caracol.png",
                identificador: "19",
                nombre: "Caracol",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Oveja.png",
                identificador: "20",
                nombre: "Oveja",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Gallo.png",
                identificador: "21",
                nombre: "Gallo",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Abeja.png",
                identificador: "22",
                nombre: "Abeja",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Mariposa.png",
                identificador: "23",
                nombre: "Mariposa",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Pez.png",
                identificador: "24",
                nombre: "Pez",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Pinguino.png",
                identificador: "25",
                nombre: "Pingüino",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Cocodrilo.png",
                identificador: "26",
                nombre: "Cocodrilo",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Vaca.png",
                identificador: "27",
                nombre: "Vaca",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Chanchito.png",
                identificador: "28",
                nombre: "Chanchito",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Tigre.png",
                identificador: "29",
                nombre: "Tigre",
            },
            {
                ruta: "assets/mascotas/mascotas pozo millonario-Gato.png",
                identificador: "30",
                nombre: "Gato",
            },
        ];
        let aux = animales.find((x) => x.identificador === mascota);
        return aux;
    }
    obtenerCaracteristicasDeAntojito(antojito) {
        let animales = [
            {
                ruta: "assets/antojitos/1.jpg",
                identificador: "01",
                nombre: "Choclo con queso",
            },
            {
                ruta: "assets/antojitos/13.jpg",
                identificador: "13",
                nombre: "Cangrejo criollo",
            },
            {
                ruta: "assets/antojitos/10.jpg",
                identificador: "10",
                nombre: "Quimbolitos",
            },
            {
                ruta: "assets/antojitos/14.jpg",
                identificador: "14",
                nombre: "Carne en palito",
            },
            {
                ruta: "assets/antojitos/6.jpg",
                identificador: "06",
                nombre: "Caldo de bola",
            },
            {
                ruta: "assets/antojitos/2.jpg",
                identificador: "02",
                nombre: "Muchín con miel",
            },
            {
                ruta: "assets/antojitos/12.jpg",
                identificador: "12",
                nombre: "Higos con queso",
            },
            {
                ruta: "assets/antojitos/8.jpg",
                identificador: "08",
                nombre: "Patacones con queso",
            },
            {
                ruta: "assets/antojitos/15.jpg",
                identificador: "15",
                nombre: "Hayaca",
            },
            {
                ruta: "assets/antojitos/4.jpg",
                identificador: "04",
                nombre: "Pescado frito",
            },
            {
                ruta: "assets/antojitos/7.jpg",
                identificador: "07",
                nombre: "Llapingacho",
            },
            {
                ruta: "assets/antojitos/11.jpg",
                identificador: "11",
                nombre: "Coco helado",
            },
            {
                ruta: "assets/antojitos/5.jpg",
                identificador: "05",
                nombre: "Cuy",
            },
            {
                ruta: "assets/antojitos/3.jpg",
                identificador: "03",
                nombre: "Humitas",
            },
            {
                ruta: "assets/antojitos/9.jpg",
                identificador: "09",
                nombre: "Melcocha",
            },
            {
                ruta: "assets/antojitos/16.jpg",
                identificador: "16",
                nombre: "Empanadas de morocho",
            },
        ];
        let aux = animales.find((x) => parseInt(x.identificador) === parseInt(antojito));
        return aux;
    }
    obtenerAnimalesTabs() {
        this.animalesTabs = [];
        localStorage.setItem("animalesTabs", JSON.stringify(this.animalesTabs));
    }
    getReservaId() {
        if (JSON.parse(localStorage.getItem("reservaId")) &&
            JSON.parse(localStorage.getItem("reservaId")) != "") {
            return JSON.parse(localStorage.getItem("reservaId"));
        }
        else {
            return 0;
        }
    }
    setReservaId(id) {
        localStorage.setItem("reservaId", JSON.stringify(id));
    }
    reservarBoletos(token, boleto, tipoLoteria, reservaId) {
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        headers = headers.append("Content-Type", "application/json");
        let address = "/reservas";
        let endpoint = "/reservarBoletos";
        address = this.mySource + address + endpoint;
        let authData = this.getAuthData();
        let body = {
            lotteryToken: authData.lotteryToken,
            user: authData.user,
            reservaId,
        };
        let aux;
        switch (tipoLoteria) {
            case 1:
                aux = [
                    {
                        combinacion: boleto.ticket.combinacion,
                        fracciones: boleto.fracciones,
                        sorteo: boleto.sorteo,
                    },
                ];
                body["loteria"] = aux;
                break;
            case 2:
                aux = [
                    {
                        combinacion: boleto.ticket.combinacion1,
                        sorteo: boleto.sorteo,
                    },
                ];
                body["lotto"] = aux;
                break;
            case 5:
                aux = [
                    {
                        combinacion: boleto.ticket.combinacion1,
                        sorteo: boleto.sorteo,
                    },
                ];
                body["pozo"] = aux;
                break;
            case 14:
                aux = [
                    {
                        combinacion: boleto.ticket.combinacion1,
                        combinacion2: boleto.ticket.combinacion2,
                        fracciones: boleto.fracciones,
                        sorteo: boleto.sorteo,
                    },
                ];
                body["millonaria"] = aux;
                break;
        }
        return new Promise((resolve, reject) => {
            this.http.post(address, body, { headers: headers }).subscribe((data) => {
                let response = data;
                resolve(response);
            }, (error) => {
                reject(new Error(error.error.message));
            });
        });
    }
    eliminarBoletosDeReserva(token, boleto, sorteo, fracciones, tipoLoteria, reservaId) {
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        headers = headers.append("Content-Type", "application/json");
        let address = "/reservas";
        let endpoint = "/eliminarBoletosDeReserva";
        address = this.mySource + address + endpoint;
        let authData = this.getAuthData();
        let body = {
            lotteryToken: authData.lotteryToken,
            user: authData.user,
            reservaId,
        };
        let aux;
        switch (tipoLoteria) {
            case 1:
                aux = [
                    {
                        combinacion: boleto.combinacion,
                        fracciones,
                        sorteo: sorteo,
                    },
                ];
                body["loteria"] = aux;
                break;
            case 2:
                aux = [
                    {
                        combinacion: boleto.combinacion1,
                        sorteo: sorteo,
                    },
                ];
                body["lotto"] = aux;
                break;
            case 5:
                aux = [
                    {
                        combinacion: boleto.combinacion1,
                        sorteo: sorteo,
                    },
                ];
                body["pozo"] = aux;
                break;
            case 14:
                aux = [
                    {
                        combinacion: boleto.combinacion1,
                        combinacion2: boleto.combinacion2,
                        fracciones,
                        sorteo: sorteo,
                    },
                ];
                body["millonaria"] = aux;
                break;
        }
        return new Promise((resolve, reject) => {
            this.http.post(address, body, { headers: headers }).subscribe((data) => {
                let response = data;
                resolve(response);
            }, (error) => {
                reject(new Error(error.error.message));
            });
        });
    }
    eliminarTodosLosBoletosDeReserva(token, boletosLoteria, boletosLotto, boletosPozo, boletosMillonaria, reservaId) {
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]();
        headers = headers.append("Content-Type", "application/json");
        let address = "/reservas";
        let endpoint = "/eliminarBoletosDeReserva";
        address = this.mySource + address + endpoint;
        let authData = this.getAuthData();
        let body = {
            lotteryToken: authData.lotteryToken,
            user: authData.user,
            reservaId,
        };
        let auxLoteria = [];
        let auxLotto = [];
        let auxPozo = [];
        let auxMillonaria = [];
        boletosLoteria.forEach((boleto) => {
            auxLoteria.push({
                combinacion: boleto.ticket.combinacion,
                fracciones: boleto.ticket.seleccionados,
                sorteo: boleto.sorteo,
            });
            body["loteria"] = auxLoteria;
        });
        boletosLotto.forEach((boleto) => {
            auxLotto.push({
                combinacion: boleto.ticket.combinacion1,
                sorteo: boleto.sorteo,
            });
            body["lotto"] = auxLotto;
        });
        boletosPozo.forEach((boleto) => {
            auxPozo.push({
                combinacion: boleto.ticket.combinacion1,
                sorteo: boleto.sorteo,
            });
            body["pozo"] = auxPozo;
        });
        boletosMillonaria.forEach((boleto) => {
            auxMillonaria.push({
                combinacion: boleto.ticket.combinacion1,
                sorteo: boleto.sorteo,
            });
            body["millonaria"] = auxMillonaria;
        });
        return new Promise((resolve, reject) => {
            this.http.post(address, body, { headers: headers }).subscribe((data) => {
                let response = data;
                resolve(response);
            }, (error) => {
                reject(new Error(error.error.message));
            });
        });
    }
};
LotteryService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
];
LotteryService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: "root",
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], LotteryService);



/***/ }),

/***/ "./src/app/shared/components/error/error.component.scss":
/*!**************************************************************!*\
  !*** ./src/app/shared/components/error/error.component.scss ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".logBox {\n  background-color: #ffffff;\n  border-radius: 3px;\n  max-height: 80%;\n  z-index: 100000;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  overflow: hidden;\n  width: 50%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.blackBox {\n  position: fixed;\n  z-index: 8000;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transition: height 0.2s ease-out;\n  overflow: hidden;\n  background-color: rgba(155, 155, 155, 0.5);\n  border: none;\n}\n\n.formButton {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 52px;\n  color: white;\n  background-color: red;\n  margin: auto;\n  margin-top: 5px;\n  margin-bottom: 23px;\n  border-style: solid;\n  border-width: 3px;\n  border-color: red;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.formButton:hover {\n  color: red;\n  background-color: white;\n}\n\n.formButton:active {\n  color: red;\n  background-color: white;\n}\n\n.formButton p {\n  color: white;\n  margin: 0;\n  font-size: 23px;\n  font-weight: bold;\n  width: 100%;\n  text-decoration: none !important;\n}\n\n.formButton:hover p {\n  color: red;\n}\n\n.buttonBox {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 10px;\n}\n\n.closeButton {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 23px;\n  height: 23px;\n}\n\n.closeButton .closeB {\n  background: transparent;\n  width: 100%;\n  height: 100%;\n  z-index: 2000;\n  color: white;\n  font-weight: bold;\n  margin: 0 auto;\n  text-align: center;\n  border: 2px solid white;\n  border-radius: 3px;\n  cursor: pointer;\n  padding: 0;\n}\n\n.closeButton .closeB:hover {\n  background-color: white;\n  color: red;\n}\n\n.errorHeader {\n  width: 100%;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  font-size: 23px;\n  font-weight: bold;\n  color: white;\n  background-color: red;\n  margin: 0;\n  text-align: center;\n}\n\n.errorContent {\n  font-size: 18px;\n  color: black;\n  padding-top: 42px;\n  padding-bottom: 42px;\n  margin: 0;\n  text-align: center;\n}\n\n@media screen and (max-width: 1000px) {\n  .logBox {\n    width: 80%;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/shared/components/error/error.component.ts":
/*!************************************************************!*\
  !*** ./src/app/shared/components/error/error.component.ts ***!
  \************************************************************/
/*! exports provided: ErrorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorComponent", function() { return ErrorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let ErrorComponent = class ErrorComponent {
    constructor() {
        this.title = "ERROR";
        this.closeError = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
        this.msg = this.msg.replace(/^\:/, "");
    }
    close() {
        this.closeError.emit("Cerrando error");
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], ErrorComponent.prototype, "msg", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], ErrorComponent.prototype, "title", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], ErrorComponent.prototype, "closeError", void 0);
ErrorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-error",
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./error.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/shared/components/error/error.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./error.component.scss */ "./src/app/shared/components/error/error.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], ErrorComponent);



/***/ }),

/***/ "./src/app/shared/components/loader/loader.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/shared/components/loader/loader.component.scss ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".loadBox {\n  position: fixed;\n  z-index: 100000;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.8);\n}\n.loadBox div {\n  width: 100%;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.loadBox div .loadIcon {\n  height: 50%;\n}\n.loadBox div .loadLogo {\n  height: 50%;\n}\n.loadBox .loadText {\n  font-size: 16px;\n  font-weight: bold;\n  color: #29352f;\n  text-align: center;\n  width: 100%;\n  white-space: nowrap;\n  background-color: rgba(255, 255, 255, 0.5);\n  padding: 20px;\n}\n.blackBox {\n  position: fixed;\n  z-index: 8000;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transition: height 0.2s ease-out;\n  overflow: hidden;\n  background-color: rgba(155, 155, 155, 0.5);\n  border: none;\n}\n@media screen and (max-width: 1000px) {\n  .loadBox {\n    width: 75%;\n  }\n  .loadBox div {\n    height: auto;\n  }\n  .loadBox div .loadIcon {\n    width: 50%;\n    height: auto;\n  }\n  .loadBox div .loadLogo {\n    width: 100%;\n    height: auto;\n  }\n  .loadBox .loadText {\n    white-space: normal;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZ2Vsb2Fjci9Qcm95ZWN0b3MvbG90ZXJpYU5hY2lvbmFsL2FwcC9sb3RlcmlhTmFjaW9uYWxXZWJBcHAvc3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9sb2FkZXIvbG9hZGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9sb2FkZXIvbG9hZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxTQUFBO0VBQ0EsUUFBQTtFQUNBLGdDQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSwwQ0FBQTtBQ0NGO0FEQ0U7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUNDSjtBREFJO0VBQ0UsV0FBQTtBQ0VOO0FEQUk7RUFDRSxXQUFBO0FDRU47QURFRTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtFQUNBLDBDQUFBO0VBQ0EsYUFBQTtBQ0FKO0FESUE7RUFDRSxlQUFBO0VBQ0EsYUFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxnQ0FBQTtFQUNBLGdCQUFBO0VBQ0EsMENBQUE7RUFDQSxZQUFBO0FDREY7QURLQTtFQUVFO0lBQ0UsVUFBQTtFQ0hGO0VES0U7SUFDRSxZQUFBO0VDSEo7RURJSTtJQUNFLFVBQUE7SUFDQSxZQUFBO0VDRk47RURJSTtJQUNFLFdBQUE7SUFDQSxZQUFBO0VDRk47RURNRTtJQUNFLG1CQUFBO0VDSko7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZEJveCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMTAwMDAwO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuXG4gIGRpdiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAubG9hZEljb24ge1xuICAgICAgaGVpZ2h0OiA1MCU7XG4gICAgfVxuICAgIC5sb2FkTG9nbyB7XG4gICAgICBoZWlnaHQ6IDUwJTtcbiAgICB9XG4gIH1cblxuICAubG9hZFRleHQge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogIzI5MzUyZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxufVxuICBcbi5ibGFja0JveCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogODAwMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgMC4ycyBlYXNlLW91dDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNTUsIDE1NSwgMTU1LCAwLjUpO1xuICBib3JkZXI6IG5vbmU7XG59XG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KSB7XG5cbiAgLmxvYWRCb3gge1xuICAgIHdpZHRoOiA3NSU7XG4gIFxuICAgIGRpdiB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAubG9hZEljb24ge1xuICAgICAgICB3aWR0aDogNTAlO1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICB9XG4gICAgICAubG9hZExvZ28ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgfVxuICAgIH1cbiAgXG4gICAgLmxvYWRUZXh0IHtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgfVxuICB9XG4gICAgXG5cbn0iLCIubG9hZEJveCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMTAwMDAwO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xufVxuLmxvYWRCb3ggZGl2IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLmxvYWRCb3ggZGl2IC5sb2FkSWNvbiB7XG4gIGhlaWdodDogNTAlO1xufVxuLmxvYWRCb3ggZGl2IC5sb2FkTG9nbyB7XG4gIGhlaWdodDogNTAlO1xufVxuLmxvYWRCb3ggLmxvYWRUZXh0IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICMyOTM1MmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbiAgcGFkZGluZzogMjBweDtcbn1cblxuLmJsYWNrQm94IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA4MDAwO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRyYW5zaXRpb246IGhlaWdodCAwLjJzIGVhc2Utb3V0O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE1NSwgMTU1LCAxNTUsIDAuNSk7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gIC5sb2FkQm94IHtcbiAgICB3aWR0aDogNzUlO1xuICB9XG4gIC5sb2FkQm94IGRpdiB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG4gIC5sb2FkQm94IGRpdiAubG9hZEljb24ge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG4gIC5sb2FkQm94IGRpdiAubG9hZExvZ28ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgfVxuICAubG9hZEJveCAubG9hZFRleHQge1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIH1cbn0iXX0= */");

/***/ }),

/***/ "./src/app/shared/components/loader/loader.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/components/loader/loader.component.ts ***!
  \**************************************************************/
/*! exports provided: LoaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoaderComponent", function() { return LoaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let LoaderComponent = class LoaderComponent {
    constructor() {
        this.loaderPath = "assets/loader.gif";
    }
    ngOnInit() {
        switch (this.loader) {
            case "lotto":
                this.logoPath = "assets/img/lotto-sombra-2.png";
                //this.logoPath = "assets/lottoLoader.gif";
                break;
            case "pozo":
                this.logoPath = "assets/img/pozo-sombra.png";
                //this.logoPath = "assets/pozoLoader.gif";
                break;
            case "millonaria":
                this.logoPath = "assets/img/millonaria-consulta.png";
                //this.logoPath = "assets/pozoLoader.gif";
                break;
            default:
                this.logoPath = "assets/img/loteria-sombra.png";
                //this.logoPath = "assets/loteriaLoader.gif";
                break;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], LoaderComponent.prototype, "message", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], LoaderComponent.prototype, "loader", void 0);
LoaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-loader",
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./loader.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/shared/components/loader/loader.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./loader.component.scss */ "./src/app/shared/components/loader/loader.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], LoaderComponent);



/***/ }),

/***/ "./src/app/shared/shared.module.ts":
/*!*****************************************!*\
  !*** ./src/app/shared/shared.module.ts ***!
  \*****************************************/
/*! exports provided: SharedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedModule", function() { return SharedModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _components_loader_loader_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/loader/loader.component */ "./src/app/shared/components/loader/loader.component.ts");
/* harmony import */ var _components_error_error_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/error/error.component */ "./src/app/shared/components/error/error.component.ts");





let SharedModule = class SharedModule {
};
SharedModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [_components_loader_loader_component__WEBPACK_IMPORTED_MODULE_3__["LoaderComponent"], _components_error_error_component__WEBPACK_IMPORTED_MODULE_4__["ErrorComponent"]],
        entryComponents: [_components_loader_loader_component__WEBPACK_IMPORTED_MODULE_3__["LoaderComponent"]],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]],
        exports: [_components_loader_loader_component__WEBPACK_IMPORTED_MODULE_3__["LoaderComponent"], _components_error_error_component__WEBPACK_IMPORTED_MODULE_4__["ErrorComponent"]]
    })
], SharedModule);



/***/ })

}]);
//# sourceMappingURL=default~inquiry-inquiry-module~landing-landing-module~lottery-lottery-module~payment-payment-module-es2015.js.map