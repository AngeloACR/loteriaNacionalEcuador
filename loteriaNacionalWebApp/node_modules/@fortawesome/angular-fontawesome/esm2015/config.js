import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class FaConfig {
    constructor() {
        /**
         * Default prefix to use, when one is not provided with the icon name.
         *
         * @default 'fas'
         */
        this.defaultPrefix = 'fas';
        /**
         * Provides a fallback icon to use whilst main icon is being loaded asynchronously.
         * When value is null, then fa-icon component will throw an error if icon input is missing.
         * When value is not null, then the provided icon will be used as a fallback icon if icon input is missing.
         *
         * @default null
         */
        this.fallbackIcon = null;
        /**
         * Whether components should lookup icon definitions in the global icon
         * library (the one available from
         * `import { library } from '@fortawesome/fontawesome-svg-core')`.
         *
         * See https://github.com/FortAwesome/angular-fontawesome/blob/master/docs/usage/icon-library.md
         * for detailed description of library modes.
         *
         * - 'unset' - Components should lookup icon definitions in the global library
         * and emit warning if they find a definition there. This option is a default
         * to assist existing applications with a migration. Applications are expected
         * to switch to using {@link FaIconLibrary}.
         * - true - Components should lookup icon definitions in the global library.
         * Note that global icon library is deprecated and support for it will be
         * removed. This option can be used to temporarily suppress warnings.
         * - false - Components should not lookup icon definitions in the global
         * library. Library will throw an error if missing icon is found in the global
         * library.
         *
         * @deprecated This option is deprecated since 0.5.0. In 0.6.0 default will
         * be changed to false. In 0.8.0 the option will be removed together with the
         * support for the global icon library.
         *
         * @default false
         */
        this.globalLibrary = false;
    }
}
FaConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: FaConfig, factory: function FaConfig_Factory(t) { return new (t || FaConfig)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(FaConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, { constructor: [], defaultPrefix: [], fallbackIcon: [], globalLibrary: [] });
FaConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function FaConfig_Factory() { return new FaConfig(); }, token: FaConfig, providedIn: "root" });

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL0plZmZlcnNvbi9EZXNrdG9wL3Byb3llY3Rvcy9sb3RlcmlhTmFjaW9uYWxFY3VhZG9yL2xvdGVyaWFOYWNpb25hbFdlYkFwcC9ub2RlX21vZHVsZXMvQGZvcnRhd2Vzb21lL2FuZ3VsYXItZm9udGF3ZXNvbWUvZXNtMjAxNS9jb25maWcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUhBMkNDO2lKQUNnSixBQUcvSSIsImZpbGUiOiJjb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuZXhwb3J0IGNsYXNzIEZhQ29uZmlnIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmF1bHQgcHJlZml4IHRvIHVzZSwgd2hlbiBvbmUgaXMgbm90IHByb3ZpZGVkIHdpdGggdGhlIGljb24gbmFtZS5cbiAgICAgICAgICpcbiAgICAgICAgICogQGRlZmF1bHQgJ2ZhcydcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZGVmYXVsdFByZWZpeCA9ICdmYXMnO1xuICAgICAgICAvKipcbiAgICAgICAgICogUHJvdmlkZXMgYSBmYWxsYmFjayBpY29uIHRvIHVzZSB3aGlsc3QgbWFpbiBpY29uIGlzIGJlaW5nIGxvYWRlZCBhc3luY2hyb25vdXNseS5cbiAgICAgICAgICogV2hlbiB2YWx1ZSBpcyBudWxsLCB0aGVuIGZhLWljb24gY29tcG9uZW50IHdpbGwgdGhyb3cgYW4gZXJyb3IgaWYgaWNvbiBpbnB1dCBpcyBtaXNzaW5nLlxuICAgICAgICAgKiBXaGVuIHZhbHVlIGlzIG5vdCBudWxsLCB0aGVuIHRoZSBwcm92aWRlZCBpY29uIHdpbGwgYmUgdXNlZCBhcyBhIGZhbGxiYWNrIGljb24gaWYgaWNvbiBpbnB1dCBpcyBtaXNzaW5nLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAZGVmYXVsdCBudWxsXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmZhbGxiYWNrSWNvbiA9IG51bGw7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXaGV0aGVyIGNvbXBvbmVudHMgc2hvdWxkIGxvb2t1cCBpY29uIGRlZmluaXRpb25zIGluIHRoZSBnbG9iYWwgaWNvblxuICAgICAgICAgKiBsaWJyYXJ5ICh0aGUgb25lIGF2YWlsYWJsZSBmcm9tXG4gICAgICAgICAqIGBpbXBvcnQgeyBsaWJyYXJ5IH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLXN2Zy1jb3JlJylgLlxuICAgICAgICAgKlxuICAgICAgICAgKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0ZvcnRBd2Vzb21lL2FuZ3VsYXItZm9udGF3ZXNvbWUvYmxvYi9tYXN0ZXIvZG9jcy91c2FnZS9pY29uLWxpYnJhcnkubWRcbiAgICAgICAgICogZm9yIGRldGFpbGVkIGRlc2NyaXB0aW9uIG9mIGxpYnJhcnkgbW9kZXMuXG4gICAgICAgICAqXG4gICAgICAgICAqIC0gJ3Vuc2V0JyAtIENvbXBvbmVudHMgc2hvdWxkIGxvb2t1cCBpY29uIGRlZmluaXRpb25zIGluIHRoZSBnbG9iYWwgbGlicmFyeVxuICAgICAgICAgKiBhbmQgZW1pdCB3YXJuaW5nIGlmIHRoZXkgZmluZCBhIGRlZmluaXRpb24gdGhlcmUuIFRoaXMgb3B0aW9uIGlzIGEgZGVmYXVsdFxuICAgICAgICAgKiB0byBhc3Npc3QgZXhpc3RpbmcgYXBwbGljYXRpb25zIHdpdGggYSBtaWdyYXRpb24uIEFwcGxpY2F0aW9ucyBhcmUgZXhwZWN0ZWRcbiAgICAgICAgICogdG8gc3dpdGNoIHRvIHVzaW5nIHtAbGluayBGYUljb25MaWJyYXJ5fS5cbiAgICAgICAgICogLSB0cnVlIC0gQ29tcG9uZW50cyBzaG91bGQgbG9va3VwIGljb24gZGVmaW5pdGlvbnMgaW4gdGhlIGdsb2JhbCBsaWJyYXJ5LlxuICAgICAgICAgKiBOb3RlIHRoYXQgZ2xvYmFsIGljb24gbGlicmFyeSBpcyBkZXByZWNhdGVkIGFuZCBzdXBwb3J0IGZvciBpdCB3aWxsIGJlXG4gICAgICAgICAqIHJlbW92ZWQuIFRoaXMgb3B0aW9uIGNhbiBiZSB1c2VkIHRvIHRlbXBvcmFyaWx5IHN1cHByZXNzIHdhcm5pbmdzLlxuICAgICAgICAgKiAtIGZhbHNlIC0gQ29tcG9uZW50cyBzaG91bGQgbm90IGxvb2t1cCBpY29uIGRlZmluaXRpb25zIGluIHRoZSBnbG9iYWxcbiAgICAgICAgICogbGlicmFyeS4gTGlicmFyeSB3aWxsIHRocm93IGFuIGVycm9yIGlmIG1pc3NpbmcgaWNvbiBpcyBmb3VuZCBpbiB0aGUgZ2xvYmFsXG4gICAgICAgICAqIGxpYnJhcnkuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBkZXByZWNhdGVkIFRoaXMgb3B0aW9uIGlzIGRlcHJlY2F0ZWQgc2luY2UgMC41LjAuIEluIDAuNi4wIGRlZmF1bHQgd2lsbFxuICAgICAgICAgKiBiZSBjaGFuZ2VkIHRvIGZhbHNlLiBJbiAwLjguMCB0aGUgb3B0aW9uIHdpbGwgYmUgcmVtb3ZlZCB0b2dldGhlciB3aXRoIHRoZVxuICAgICAgICAgKiBzdXBwb3J0IGZvciB0aGUgZ2xvYmFsIGljb24gbGlicmFyeS5cbiAgICAgICAgICpcbiAgICAgICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ2xvYmFsTGlicmFyeSA9IGZhbHNlO1xuICAgIH1cbn1cbkZhQ29uZmlnLsm1cHJvdiA9IGkwLsm1ybVkZWZpbmVJbmplY3RhYmxlKHsgZmFjdG9yeTogZnVuY3Rpb24gRmFDb25maWdfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBGYUNvbmZpZygpOyB9LCB0b2tlbjogRmFDb25maWcsIHByb3ZpZGVkSW46IFwicm9vdFwiIH0pO1xuRmFDb25maWcuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IEluamVjdGFibGUsIGFyZ3M6IFt7IHByb3ZpZGVkSW46ICdyb290JyB9LF0gfVxuXTtcbiJdfQ==