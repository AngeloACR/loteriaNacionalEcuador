import { Directive, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class FaStackItemSizeDirective {
    constructor() {
        /**
         * Specify whether icon inside {@link FaStackComponent} should be rendered in
         * regular size (1x) or as a larger icon (2x).
         */
        this.stackItemSize = '1x';
    }
    ngOnChanges(changes) {
        if ('size' in changes) {
            throw new Error('fa-icon is not allowed to customize size when used inside fa-stack. ' +
                'Set size on the enclosing fa-stack instead: <fa-stack size="4x">...</fa-stack>.');
        }
    }
}
FaStackItemSizeDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: FaStackItemSizeDirective, selectors: [["fa-icon", "stackItemSize", ""], ["fa-duotone-icon", "stackItemSize", ""]], factory: function FaStackItemSizeDirective_Factory(t) { return new (t || FaStackItemSizeDirective)(); }, inputs: { stackItemSize: "stackItemSize", size: "size" }, features: [ɵngcc0.ɵɵNgOnChangesFeature()] });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(FaStackItemSizeDirective, [{
        type: Directive,
        args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'fa-icon[stackItemSize],fa-duotone-icon[stackItemSize]'
            }]
    }], function () { return []; }, { constructor: [], stackItemSize: [{
            type: Input
        }], ngOnChanges: [], size: [{
            type: Input
        }] });
FaStackItemSizeDirective.propDecorators = {
    stackItemSize: [{ type: Input }],
    size: [{ type: Input }]
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL0plZmZlcnNvbi9EZXNrdG9wL3Byb3llY3Rvcy9sb3RlcmlhTmFjaW9uYWxFY3VhZG9yL2xvdGVyaWFOYWNpb25hbFdlYkFwcC9ub2RlX21vZHVsZXMvQGZvcnRhd2Vzb21lL2FuZ3VsYXItZm9udGF3ZXNvbWUvZXNtMjAxNS9zdGFjay9zdGFjay1pdGVtLXNpemUuZGlyZWN0aXZlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWNDLGFBTUMiLCJmaWxlIjoic3RhY2staXRlbS1zaXplLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBjbGFzcyBGYVN0YWNrSXRlbVNpemVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmeSB3aGV0aGVyIGljb24gaW5zaWRlIHtAbGluayBGYVN0YWNrQ29tcG9uZW50fSBzaG91bGQgYmUgcmVuZGVyZWQgaW5cbiAgICAgICAgICogcmVndWxhciBzaXplICgxeCkgb3IgYXMgYSBsYXJnZXIgaWNvbiAoMngpLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zdGFja0l0ZW1TaXplID0gJzF4JztcbiAgICB9XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlcykge1xuICAgICAgICBpZiAoJ3NpemUnIGluIGNoYW5nZXMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignZmEtaWNvbiBpcyBub3QgYWxsb3dlZCB0byBjdXN0b21pemUgc2l6ZSB3aGVuIHVzZWQgaW5zaWRlIGZhLXN0YWNrLiAnICtcbiAgICAgICAgICAgICAgICAnU2V0IHNpemUgb24gdGhlIGVuY2xvc2luZyBmYS1zdGFjayBpbnN0ZWFkOiA8ZmEtc3RhY2sgc2l6ZT1cIjR4XCI+Li4uPC9mYS1zdGFjaz4uJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5GYVN0YWNrSXRlbVNpemVEaXJlY3RpdmUuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IERpcmVjdGl2ZSwgYXJnczogW3tcbiAgICAgICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6ZGlyZWN0aXZlLXNlbGVjdG9yXG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdmYS1pY29uW3N0YWNrSXRlbVNpemVdLGZhLWR1b3RvbmUtaWNvbltzdGFja0l0ZW1TaXplXScsXG4gICAgICAgICAgICB9LF0gfVxuXTtcbkZhU3RhY2tJdGVtU2l6ZURpcmVjdGl2ZS5wcm9wRGVjb3JhdG9ycyA9IHtcbiAgICBzdGFja0l0ZW1TaXplOiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICBzaXplOiBbeyB0eXBlOiBJbnB1dCB9XVxufTtcbiJdfQ==