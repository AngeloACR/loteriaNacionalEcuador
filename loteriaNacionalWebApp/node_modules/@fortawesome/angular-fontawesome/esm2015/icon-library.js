import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class FaIconLibrary {
    constructor() {
        this.definitions = {};
    }
    addIcons(...icons) {
        for (const icon of icons) {
            if (!(icon.prefix in this.definitions)) {
                this.definitions[icon.prefix] = {};
            }
            this.definitions[icon.prefix][icon.iconName] = icon;
        }
    }
    addIconPacks(...packs) {
        for (const pack of packs) {
            const icons = Object.keys(pack).map((key) => pack[key]);
            this.addIcons(...icons);
        }
    }
    getIconDefinition(prefix, name) {
        if (prefix in this.definitions && name in this.definitions[prefix]) {
            return this.definitions[prefix][name];
        }
        return null;
    }
}
FaIconLibrary.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: FaIconLibrary, factory: function FaIconLibrary_Factory(t) { return new (t || FaIconLibrary)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(FaIconLibrary, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, { constructor: [], definitions: [], addIcons: [], addIconPacks: [], getIconDefinition: [] });
FaIconLibrary.ɵprov = i0.ɵɵdefineInjectable({ factory: function FaIconLibrary_Factory() { return new FaIconLibrary(); }, token: FaIconLibrary, providedIn: "root" });

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL0plZmZlcnNvbi9EZXNrdG9wL3Byb3llY3Rvcy9sb3RlcmlhTmFjaW9uYWxFY3VhZG9yL2xvdGVyaWFOYWNpb25hbFdlYkFwcC9ub2RlX21vZHVsZXMvQGZvcnRhd2Vzb21lL2FuZ3VsYXItZm9udGF3ZXNvbWUvZXNtMjAxNS9pY29uLWxpYnJhcnkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpSUF3QkM7cUtBQ29LLEFBR25LIiwiZmlsZSI6Imljb24tbGlicmFyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIGkwIGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5leHBvcnQgY2xhc3MgRmFJY29uTGlicmFyeSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGVmaW5pdGlvbnMgPSB7fTtcbiAgICB9XG4gICAgYWRkSWNvbnMoLi4uaWNvbnMpIHtcbiAgICAgICAgZm9yIChjb25zdCBpY29uIG9mIGljb25zKSB7XG4gICAgICAgICAgICBpZiAoIShpY29uLnByZWZpeCBpbiB0aGlzLmRlZmluaXRpb25zKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZGVmaW5pdGlvbnNbaWNvbi5wcmVmaXhdID0ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmRlZmluaXRpb25zW2ljb24ucHJlZml4XVtpY29uLmljb25OYW1lXSA9IGljb247XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkSWNvblBhY2tzKC4uLnBhY2tzKSB7XG4gICAgICAgIGZvciAoY29uc3QgcGFjayBvZiBwYWNrcykge1xuICAgICAgICAgICAgY29uc3QgaWNvbnMgPSBPYmplY3Qua2V5cyhwYWNrKS5tYXAoKGtleSkgPT4gcGFja1trZXldKTtcbiAgICAgICAgICAgIHRoaXMuYWRkSWNvbnMoLi4uaWNvbnMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldEljb25EZWZpbml0aW9uKHByZWZpeCwgbmFtZSkge1xuICAgICAgICBpZiAocHJlZml4IGluIHRoaXMuZGVmaW5pdGlvbnMgJiYgbmFtZSBpbiB0aGlzLmRlZmluaXRpb25zW3ByZWZpeF0pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRlZmluaXRpb25zW3ByZWZpeF1bbmFtZV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuRmFJY29uTGlicmFyeS7JtXByb3YgPSBpMC7Jtcm1ZGVmaW5lSW5qZWN0YWJsZSh7IGZhY3Rvcnk6IGZ1bmN0aW9uIEZhSWNvbkxpYnJhcnlfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBGYUljb25MaWJyYXJ5KCk7IH0sIHRva2VuOiBGYUljb25MaWJyYXJ5LCBwcm92aWRlZEluOiBcInJvb3RcIiB9KTtcbkZhSWNvbkxpYnJhcnkuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IEluamVjdGFibGUsIGFyZ3M6IFt7IHByb3ZpZGVkSW46ICdyb290JyB9LF0gfVxuXTtcbiJdfQ==