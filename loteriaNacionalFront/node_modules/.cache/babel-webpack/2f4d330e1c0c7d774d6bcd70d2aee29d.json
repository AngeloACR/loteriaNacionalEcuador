{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let VentasService = /*#__PURE__*/(() => {\n  class VentasService {\n    constructor(http) {\n      this.http = http;\n      this.localSource = 'http://localhost:100';\n      this.testSource = 'https://ventas-api-prueba.loteria.com.ec';\n      this.productionSource = 'https://ventas-api.loteria.com.ec'; //mySource = this.localSource;\n\n      this.mySource = this.testSource;\n    }\n\n    formatNumber(number) {\n      // Create our number formatter.\n      var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      });\n      return formatter.format(number);\n    }\n\n    getAuthData() {\n      let data = JSON.parse(localStorage.getItem('userData'));\n      let response = {\n        user: '',\n        lotteryToken: ''\n      };\n\n      if (data) {\n        let lotteryToken = data.lotteryToken;\n        let user = data.playerDocument; //if (data.user_ == 'italtronicprep') user = data.user_;\n\n        response = {\n          lotteryToken,\n          user\n        };\n      }\n\n      return response;\n    }\n\n    obtenerDescuentos() {\n      return;\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json'); //let endpoint = \"/inquiry\";\n\n      let address = '/ventas';\n      let endpoint = '/getDescuentos';\n      let authData = this.getAuthData();\n      address = this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        this.http.get(address, {\n          params: {\n            lotteryToken: authData.lotteryToken,\n            user: authData.user\n          },\n          headers: headers\n        }).subscribe(data => {\n          let descuentos = data;\n          resolve(descuentos);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    obtenerImagenBoleto(tipoLoteria, sorteo) {\n      let sourceBoletos = `${this.mySource}/uploads/boletos/`;\n      return new Promise((resolve, reject) => {\n        let boletoAddress = `${sourceBoletos}B${tipoLoteria}${sorteo}.png`;\n        resolve(boletoAddress);\n      });\n    }\n\n    authUser(token) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let address = '/auth';\n      let endpoint = '/';\n      let body = {\n        token\n      };\n      address = this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        this.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          localStorage.setItem('userData', JSON.stringify(data));\n          resolve(data);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    getReservaId() {\n      if (JSON.parse(localStorage.getItem('reservaId')) && JSON.parse(localStorage.getItem('reservaId')) != '') {\n        return JSON.parse(localStorage.getItem('reservaId'));\n      } else {\n        return 0;\n      }\n    }\n\n    setReservaId(id) {\n      localStorage.setItem('reservaId', JSON.stringify(id));\n    }\n\n    reservarBoletos(token, boleto, tipoLoteria, reservaId) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let address = '/reservas';\n      let endpoint = '/reservarBoletos';\n      address = this.mySource + address + endpoint;\n      let authData = this.getAuthData();\n      let body = {\n        lotteryToken: authData.lotteryToken,\n        user: authData.user,\n        reservaId\n      };\n      let aux;\n\n      switch (tipoLoteria) {\n        case 1:\n          aux = [{\n            combinacion: boleto.ticket.combinacion,\n            fracciones: boleto.fracciones,\n            sorteo: boleto.sorteo\n          }];\n          body['loteria'] = aux;\n          break;\n\n        case 2:\n          aux = [{\n            combinacion: boleto.ticket.combinacion1,\n            sorteo: boleto.sorteo\n          }];\n          body['lotto'] = aux;\n          break;\n\n        case 5:\n          aux = [{\n            combinacion: boleto.ticket.combinacion1,\n            sorteo: boleto.sorteo\n          }];\n          body['pozo'] = aux;\n          break;\n\n        case 14:\n          aux = [{\n            combinacion: boleto.ticket.combinacion1,\n            combinacion2: boleto.ticket.combinacion2,\n            fracciones: boleto.fracciones,\n            sorteo: boleto.sorteo\n          }];\n          body['millonaria'] = aux;\n          break;\n      }\n\n      return new Promise((resolve, reject) => {\n        this.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          let response = data;\n          resolve(response);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    eliminarBoletosDeReserva(token, boleto, sorteo, fracciones, tipoLoteria, reservaId) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let address = '/reservas';\n      let endpoint = '/eliminarBoletosDeReserva';\n      address = this.mySource + address + endpoint;\n      let authData = this.getAuthData();\n      let body = {\n        lotteryToken: authData.lotteryToken,\n        user: authData.user,\n        reservaId\n      };\n      let aux;\n\n      switch (tipoLoteria) {\n        case 1:\n          aux = [{\n            combinacion: boleto.combinacion,\n            fracciones,\n            sorteo: sorteo\n          }];\n          body['loteria'] = aux;\n          break;\n\n        case 2:\n          aux = [{\n            combinacion: boleto.combinacion1,\n            sorteo: sorteo\n          }];\n          body['lotto'] = aux;\n          break;\n\n        case 5:\n          aux = [{\n            combinacion: boleto.combinacion1,\n            sorteo: sorteo\n          }];\n          body['pozo'] = aux;\n          break;\n\n        case 14:\n          aux = [{\n            combinacion: boleto.combinacion1,\n            combinacion2: boleto.combinacion2,\n            fracciones,\n            sorteo: sorteo\n          }];\n          body['millonaria'] = aux;\n          break;\n      }\n\n      return new Promise((resolve, reject) => {\n        this.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          let response = data;\n          resolve(response);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    eliminarTodosLosBoletosDeReserva(token, boletosLoteria, boletosLotto, boletosPozo, boletosMillonaria, reservaId) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let address = '/reservas';\n      let endpoint = '/eliminarBoletosDeReserva';\n      address = this.mySource + address + endpoint;\n      let authData = this.getAuthData();\n      let body = {\n        lotteryToken: authData.lotteryToken,\n        user: authData.user,\n        reservaId\n      };\n      let auxLoteria = [];\n      let auxLotto = [];\n      let auxPozo = [];\n      let auxMillonaria = [];\n      boletosLoteria.forEach(boleto => {\n        auxLoteria.push({\n          combinacion: boleto.ticket.combinacion,\n          fracciones: boleto.ticket.seleccionados,\n          sorteo: boleto.sorteo\n        });\n        body['loteria'] = auxLoteria;\n      });\n      boletosLotto.forEach(boleto => {\n        auxLotto.push({\n          combinacion: boleto.ticket.combinacion1,\n          sorteo: boleto.sorteo\n        });\n        body['lotto'] = auxLotto;\n      });\n      boletosPozo.forEach(boleto => {\n        auxPozo.push({\n          combinacion: boleto.ticket.combinacion1,\n          sorteo: boleto.sorteo\n        });\n        body['pozo'] = auxPozo;\n      });\n      boletosMillonaria.forEach(boleto => {\n        auxMillonaria.push({\n          combinacion: boleto.ticket.combinacion1,\n          sorteo: boleto.sorteo\n        });\n        body['millonaria'] = auxMillonaria;\n      });\n      return new Promise((resolve, reject) => {\n        this.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          let response = data;\n          resolve(response);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n  }\n\n  VentasService.ɵfac = function VentasService_Factory(t) {\n    return new (t || VentasService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  VentasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VentasService,\n    factory: VentasService.ɵfac,\n    providedIn: 'root'\n  });\n  return VentasService;\n})();","map":null,"metadata":{},"sourceType":"module"}