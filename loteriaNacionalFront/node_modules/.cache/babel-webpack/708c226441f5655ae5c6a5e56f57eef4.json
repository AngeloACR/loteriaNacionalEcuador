{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let VentaService = /*#__PURE__*/(() => {\n  class VentaService {\n    constructor(http) {\n      this.http = http;\n      this.mySource = environment.source;\n    }\n\n    obtenerSorteo(authData) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json'); //let endpoint = \"/inquiry\";\n\n      let endpoint = `/cache/sorteosDisponibles`;\n      let address = '/lotto';\n      address = this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        this.http.get(address, {\n          params: {\n            lotteryToken: authData.lotteryToken,\n            user: authData.user\n          },\n          headers: headers\n        }).subscribe(data => {\n          let sorteosDisponibles = data;\n          sorteosDisponibles.sort(this.ordenaSorteos);\n          resolve(sorteosDisponibles);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    ordenaSorteos(a, b) {\n      let a1 = a['sorteo'];\n      let b1 = b['sorteo'];\n      return a1 - b1;\n    }\n\n    obtenerTickets(sorteo, combinacion, combinacionFigura, tipoSeleccion, authData) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let endpoint = '';\n      let body = {\n        sorteo,\n        lotteryToken: authData.lotteryToken,\n        user: authData.user,\n        combinacion,\n        combinacionFigura,\n        tipoSeleccion\n      };\n      endpoint = `${endpoint}/combinacionesDisponibles`;\n      let address = '/lotto';\n      address = this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        this.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          let combinacionesDisponibles = data.combinaciones;\n          resolve(combinacionesDisponibles);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    obtenerCaracteristicasDeAntojito(antojito) {\n      let antojitos = [{\n        ruta: \"assets/antojitos/1.jpg\",\n        identificador: \"01\",\n        nombre: \"Choclo con queso\"\n      }, {\n        ruta: \"assets/antojitos/13.jpg\",\n        identificador: \"13\",\n        nombre: \"Cangrejo criollo\"\n      }, {\n        ruta: \"assets/antojitos/10.jpg\",\n        identificador: \"10\",\n        nombre: \"Quimbolitos\"\n      }, {\n        ruta: \"assets/antojitos/14.jpg\",\n        identificador: \"14\",\n        nombre: \"Carne en palito\"\n      }, {\n        ruta: \"assets/antojitos/6.jpg\",\n        identificador: \"06\",\n        nombre: \"Caldo de bola\"\n      }, {\n        ruta: \"assets/antojitos/2.jpg\",\n        identificador: \"02\",\n        nombre: \"Muchín con miel\"\n      }, {\n        ruta: \"assets/antojitos/12.jpg\",\n        identificador: \"12\",\n        nombre: \"Higos con queso\"\n      }, {\n        ruta: \"assets/antojitos/8.jpg\",\n        identificador: \"08\",\n        nombre: \"Patacones con queso\"\n      }, {\n        ruta: \"assets/antojitos/15.jpg\",\n        identificador: \"15\",\n        nombre: \"Hayaca\"\n      }, {\n        ruta: \"assets/antojitos/4.jpg\",\n        identificador: \"04\",\n        nombre: \"Pescado frito\"\n      }, {\n        ruta: \"assets/antojitos/7.jpg\",\n        identificador: \"07\",\n        nombre: \"Llapingacho\"\n      }, {\n        ruta: \"assets/antojitos/11.jpg\",\n        identificador: \"11\",\n        nombre: \"Coco helado\"\n      }, {\n        ruta: \"assets/antojitos/5.jpg\",\n        identificador: \"05\",\n        nombre: \"Cuy\"\n      }, {\n        ruta: \"assets/antojitos/3.jpg\",\n        identificador: \"03\",\n        nombre: \"Humitas\"\n      }, {\n        ruta: \"assets/antojitos/9.jpg\",\n        identificador: \"09\",\n        nombre: \"Melcocha\"\n      }, {\n        ruta: \"assets/antojitos/16.jpg\",\n        identificador: \"16\",\n        nombre: \"Empanadas de morocho\"\n      }];\n      let aux = antojitos.find(x => parseInt(x.identificador) === parseInt(antojito));\n      return aux;\n    }\n\n  }\n\n  VentaService.ɵfac = function VentaService_Factory(t) {\n    return new (t || VentaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  VentaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VentaService,\n    factory: VentaService.ɵfac,\n    providedIn: 'root'\n  });\n  return VentaService;\n})();","map":null,"metadata":{},"sourceType":"module"}