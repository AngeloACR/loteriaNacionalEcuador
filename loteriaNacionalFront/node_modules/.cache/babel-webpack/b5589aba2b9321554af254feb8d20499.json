{"ast":null,"code":"import _asyncToGenerator from \"/home/angeloacr/Proyectos/loteriaNacional/app/loteriaNacionalFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConsultaService {\n  constructor(http) {\n    this.http = http;\n    this.today = new Date();\n    this.localSource = 'http://localhost:100';\n    this.testSource = 'https://ventas-api-prueba.loteria.com.ec';\n    this.productionSource = 'https://ventas-api.loteria.com.ec'; //mySource = this.localSource;\n    //mySource = this.testSource;\n\n    this.mySource = this.productionSource;\n  }\n\n  recuperarSorteosJugados() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json'); //let endpoint = \"/inquiry\";\n\n      let endpoint = '/cache';\n      var address = '/pozo';\n      endpoint = `${endpoint}/sorteosJugados`;\n      console.log('Recuperando sorteos de pozo millonario');\n      address = _this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        _this.http.get(address, {\n          headers: headers\n        }).subscribe(data => {\n          let sorteosJugados = data.values;\n          console.log(sorteosJugados);\n          sorteosJugados.sort(_this.ordenaSorteos);\n          resolve(sorteosJugados);\n        });\n      });\n    })();\n  }\n\n  ordenaSorteos(a, b) {\n    let a1 = a['sorteo'];\n    let b1 = b['sorteo'];\n    return b1 - a1;\n  }\n\n  recuperarBoletoGanador(sorteo, combinaciones) {\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    let endpoint = '';\n    let address = '/pozo';\n    endpoint = `${endpoint}/ganador`;\n    address = this.mySource + address + endpoint;\n    let body = {\n      sorteo,\n      combinaciones\n    };\n    console.log(body);\n    return new Promise((resolve, reject) => {\n      this.http.post(address, body, {\n        headers: headers\n      }).subscribe(data => {\n        let boletoGanador = data;\n        console.log(boletoGanador);\n        resolve(boletoGanador);\n      }, error => {\n        reject(new Error(error.error.message));\n      });\n    });\n  }\n\n  recuperarBoletoGanadorPorPlancha(boletoInicial, boletoFinal, sorteo) {\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    let address = '/pozo';\n    let endpoint = '/plancha';\n    address = this.mySource + address + endpoint;\n    let body = {\n      sorteo,\n      boletoInicial,\n      boletoFinal\n    };\n    console.log(body);\n    return new Promise((resolve, reject) => {\n      this.http.post(address, body, {\n        headers: headers\n      }).subscribe(data => {\n        let boletoGanador = data;\n        console.log(boletoGanador);\n        resolve(boletoGanador);\n      });\n    });\n  }\n\n  getUltimoResultado() {\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    let endpoint = '/cache/ultimoResultado';\n    let address = '/pozo';\n    let auxAddress = this.mySource + address + endpoint;\n    return new Promise((resolve, reject) => {\n      this.http.get(auxAddress, {\n        headers: headers\n      }).subscribe(data => {\n        let response;\n        let pozoMillonario = data;\n        localStorage.setItem('pozoMillonarioUltimoResultado', JSON.stringify(pozoMillonario));\n        response = {\n          tipo: 'pozoMillonario',\n          data: pozoMillonario\n        };\n        resolve(response);\n      }, error => {\n        reject(new Error(error.error.message));\n      });\n    });\n  }\n\n  obtenerBoletin(sorteo) {\n    let sourceBoletines = `${this.mySource}/uploads/boletines/`;\n    return new Promise((resolve, reject) => {\n      let boletinAddress = `${sourceBoletines}T5${sorteo}.jpg`;\n      resolve(boletinAddress);\n    });\n  }\n\n  obtenerMascota(mascota) {\n    let mascotaPath;\n\n    switch (mascota) {\n      case '01':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Camaron.png';\n        break;\n\n      case '02':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Delfin.png';\n        break;\n\n      case '03':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Perro.png';\n        break;\n\n      case '04':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Llama.png';\n        break;\n\n      case '05':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Papagayo.png';\n        break;\n\n      case '06':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Conejo.png';\n        break;\n\n      case '07':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Mono.png';\n        break;\n\n      case '08':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Galapago.png';\n        break;\n\n      case '09':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tucan.png';\n        break;\n\n      case '10':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Ballena.png';\n        break;\n\n      case '11':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Oso.png';\n        break;\n\n      case '12':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Foca.png';\n        break;\n\n      case '13':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Cangrejo.png';\n        break;\n\n      case '14':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Condor.png';\n        break;\n\n      case '15':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Iguana.png';\n        break;\n\n      case '16':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Caballo.png';\n        break;\n\n      case '17':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Rana.png';\n        break;\n\n      case '18':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tiburon.png';\n        break;\n\n      case '19':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Caracol.png';\n        break;\n\n      case '20':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Oveja.png';\n        break;\n\n      case '21':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Gallo.png';\n        break;\n\n      case '22':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Abeja.png';\n        break;\n\n      case '23':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Mariposa.png';\n        break;\n\n      case '24':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Pez.png';\n        break;\n\n      case '25':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Pinguino.png';\n        break;\n\n      case '26':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Cocodrilo.png';\n        break;\n\n      case '27':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Vaca.png';\n        break;\n\n      case '28':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Chanchito.png';\n        break;\n\n      case '29':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tigre.png';\n        break;\n\n      case '30':\n        mascotaPath = 'assets/mascotas/mascotas pozo millonario-Gato.png';\n        break;\n\n      default:\n        break;\n    }\n\n    return mascotaPath;\n  }\n\n}\n\nConsultaService.ɵfac = function ConsultaService_Factory(t) {\n  return new (t || ConsultaService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nConsultaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConsultaService,\n  factory: ConsultaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/angeloacr/Proyectos/loteriaNacional/app/loteriaNacionalFront/src/app/juegos/pozo/services/consulta.service.ts"],"names":["HttpHeaders","i0","i1","ConsultaService","constructor","http","today","Date","localSource","testSource","productionSource","mySource","recuperarSorteosJugados","headers","append","endpoint","address","console","log","Promise","resolve","reject","get","subscribe","data","sorteosJugados","values","sort","ordenaSorteos","a","b","a1","b1","recuperarBoletoGanador","sorteo","combinaciones","body","post","boletoGanador","error","Error","message","recuperarBoletoGanadorPorPlancha","boletoInicial","boletoFinal","getUltimoResultado","auxAddress","response","pozoMillonario","localStorage","setItem","JSON","stringify","tipo","obtenerBoletin","sourceBoletines","boletinAddress","obtenerMascota","mascota","mascotaPath","ɵfac","ConsultaService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConsultaService {\n    constructor(http) {\n        this.http = http;\n        this.today = new Date();\n        this.localSource = 'http://localhost:100';\n        this.testSource = 'https://ventas-api-prueba.loteria.com.ec';\n        this.productionSource = 'https://ventas-api.loteria.com.ec';\n        //mySource = this.localSource;\n        //mySource = this.testSource;\n        this.mySource = this.productionSource;\n    }\n    async recuperarSorteosJugados() {\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        //let endpoint = \"/inquiry\";\n        let endpoint = '/cache';\n        var address = '/pozo';\n        endpoint = `${endpoint}/sorteosJugados`;\n        console.log('Recuperando sorteos de pozo millonario');\n        address = this.mySource + address + endpoint;\n        return new Promise((resolve, reject) => {\n            this.http.get(address, { headers: headers }).subscribe((data) => {\n                let sorteosJugados = data.values;\n                console.log(sorteosJugados);\n                sorteosJugados.sort(this.ordenaSorteos);\n                resolve(sorteosJugados);\n            });\n        });\n    }\n    ordenaSorteos(a, b) {\n        let a1 = a['sorteo'];\n        let b1 = b['sorteo'];\n        return b1 - a1;\n    }\n    recuperarBoletoGanador(sorteo, combinaciones) {\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        let endpoint = '';\n        let address = '/pozo';\n        endpoint = `${endpoint}/ganador`;\n        address = this.mySource + address + endpoint;\n        let body = {\n            sorteo,\n            combinaciones,\n        };\n        console.log(body);\n        return new Promise((resolve, reject) => {\n            this.http.post(address, body, { headers: headers }).subscribe((data) => {\n                let boletoGanador = data;\n                console.log(boletoGanador);\n                resolve(boletoGanador);\n            }, (error) => {\n                reject(new Error(error.error.message));\n            });\n        });\n    }\n    recuperarBoletoGanadorPorPlancha(boletoInicial, boletoFinal, sorteo) {\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        let address = '/pozo';\n        let endpoint = '/plancha';\n        address = this.mySource + address + endpoint;\n        let body = {\n            sorteo,\n            boletoInicial,\n            boletoFinal,\n        };\n        console.log(body);\n        return new Promise((resolve, reject) => {\n            this.http\n                .post(address, body, { headers: headers })\n                .subscribe((data) => {\n                let boletoGanador = data;\n                console.log(boletoGanador);\n                resolve(boletoGanador);\n            });\n        });\n    }\n    getUltimoResultado() {\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        let endpoint = '/cache/ultimoResultado';\n        let address = '/pozo';\n        let auxAddress = this.mySource + address + endpoint;\n        return new Promise((resolve, reject) => {\n            this.http.get(auxAddress, { headers: headers }).subscribe((data) => {\n                let response;\n                let pozoMillonario = data;\n                localStorage.setItem('pozoMillonarioUltimoResultado', JSON.stringify(pozoMillonario));\n                response = { tipo: 'pozoMillonario', data: pozoMillonario };\n                resolve(response);\n            }, (error) => {\n                reject(new Error(error.error.message));\n            });\n        });\n    }\n    obtenerBoletin(sorteo) {\n        let sourceBoletines = `${this.mySource}/uploads/boletines/`;\n        return new Promise((resolve, reject) => {\n            let boletinAddress = `${sourceBoletines}T5${sorteo}.jpg`;\n            resolve(boletinAddress);\n        });\n    }\n    obtenerMascota(mascota) {\n        let mascotaPath;\n        switch (mascota) {\n            case '01':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Camaron.png';\n                break;\n            case '02':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Delfin.png';\n                break;\n            case '03':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Perro.png';\n                break;\n            case '04':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Llama.png';\n                break;\n            case '05':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Papagayo.png';\n                break;\n            case '06':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Conejo.png';\n                break;\n            case '07':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Mono.png';\n                break;\n            case '08':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Galapago.png';\n                break;\n            case '09':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tucan.png';\n                break;\n            case '10':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Ballena.png';\n                break;\n            case '11':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Oso.png';\n                break;\n            case '12':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Foca.png';\n                break;\n            case '13':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Cangrejo.png';\n                break;\n            case '14':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Condor.png';\n                break;\n            case '15':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Iguana.png';\n                break;\n            case '16':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Caballo.png';\n                break;\n            case '17':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Rana.png';\n                break;\n            case '18':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tiburon.png';\n                break;\n            case '19':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Caracol.png';\n                break;\n            case '20':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Oveja.png';\n                break;\n            case '21':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Gallo.png';\n                break;\n            case '22':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Abeja.png';\n                break;\n            case '23':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Mariposa.png';\n                break;\n            case '24':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Pez.png';\n                break;\n            case '25':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Pinguino.png';\n                break;\n            case '26':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Cocodrilo.png';\n                break;\n            case '27':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Vaca.png';\n                break;\n            case '28':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Chanchito.png';\n                break;\n            case '29':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tigre.png';\n                break;\n            case '30':\n                mascotaPath = 'assets/mascotas/mascotas pozo millonario-Gato.png';\n                break;\n            default:\n                break;\n        }\n        return mascotaPath;\n    }\n}\nConsultaService.ɵfac = function ConsultaService_Factory(t) { return new (t || ConsultaService)(i0.ɵɵinject(i1.HttpClient)); };\nConsultaService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ConsultaService, factory: ConsultaService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}