{"ast":null,"code":"import _asyncToGenerator from \"/home/angeloacr/Proyectos/loteriaNacional/app/loteriaNacionalFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ConsultaService = /*#__PURE__*/(() => {\n  class ConsultaService {\n    constructor(http) {\n      this.http = http;\n      this.today = new Date();\n      this.localSource = 'http://localhost:100';\n      this.testSource = 'https://ventas-api-prueba.loteria.com.ec';\n      this.productionSource = 'https://ventas-api.loteria.com.ec'; //mySource = this.localSource;\n      //mySource = this.testSource;\n\n      this.mySource = this.productionSource;\n    }\n\n    recuperarSorteosJugados() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json'); //let endpoint = \"/inquiry\";\n\n        let endpoint = '/cache';\n        var address = '/pozo';\n        endpoint = `${endpoint}/sorteosJugados`;\n        console.log('Recuperando sorteos de pozo millonario');\n        address = _this.mySource + address + endpoint;\n        return new Promise((resolve, reject) => {\n          _this.http.get(address, {\n            headers: headers\n          }).subscribe(data => {\n            let sorteosJugados = data.values;\n            console.log(sorteosJugados);\n            sorteosJugados.sort(_this.ordenaSorteos);\n            resolve(sorteosJugados);\n          });\n        });\n      })();\n    }\n\n    ordenaSorteos(a, b) {\n      let a1 = a['sorteo'];\n      let b1 = b['sorteo'];\n      return b1 - a1;\n    }\n\n    recuperarBoletoGanador(sorteo, combinaciones) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let endpoint = '';\n      let address = '/pozo';\n      endpoint = `${endpoint}/ganador`;\n      address = this.mySource + address + endpoint;\n      let body = {\n        sorteo,\n        combinaciones\n      };\n      console.log(body);\n      return new Promise((resolve, reject) => {\n        this.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          let boletoGanador = data;\n          console.log(boletoGanador);\n          resolve(boletoGanador);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    recuperarBoletoGanadorPorPlancha(boletoInicial, boletoFinal, sorteo) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let address = '/pozo';\n      let endpoint = '/plancha';\n      address = this.mySource + address + endpoint;\n      let body = {\n        sorteo,\n        boletoInicial,\n        boletoFinal\n      };\n      console.log(body);\n      return new Promise((resolve, reject) => {\n        this.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          let boletoGanador = data;\n          console.log(boletoGanador);\n          resolve(boletoGanador);\n        });\n      });\n    }\n\n    getUltimoResultado() {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let endpoint = '/cache/ultimoResultado';\n      let address = '/pozo';\n      let auxAddress = this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        this.http.get(auxAddress, {\n          headers: headers\n        }).subscribe(data => {\n          let response;\n          let pozoMillonario = data;\n          localStorage.setItem('pozoMillonarioUltimoResultado', JSON.stringify(pozoMillonario));\n          response = {\n            tipo: 'pozoMillonario',\n            data: pozoMillonario\n          };\n          resolve(response);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    obtenerBoletin(sorteo) {\n      let sourceBoletines = `${this.mySource}/uploads/boletines/`;\n      return new Promise((resolve, reject) => {\n        let boletinAddress = `${sourceBoletines}T5${sorteo}.jpg`;\n        resolve(boletinAddress);\n      });\n    }\n\n    obtenerMascota(mascota) {\n      let mascotaPath;\n\n      switch (mascota) {\n        case '01':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Camaron.png';\n          break;\n\n        case '02':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Delfin.png';\n          break;\n\n        case '03':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Perro.png';\n          break;\n\n        case '04':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Llama.png';\n          break;\n\n        case '05':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Papagayo.png';\n          break;\n\n        case '06':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Conejo.png';\n          break;\n\n        case '07':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Mono.png';\n          break;\n\n        case '08':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Galapago.png';\n          break;\n\n        case '09':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tucan.png';\n          break;\n\n        case '10':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Ballena.png';\n          break;\n\n        case '11':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Oso.png';\n          break;\n\n        case '12':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Foca.png';\n          break;\n\n        case '13':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Cangrejo.png';\n          break;\n\n        case '14':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Condor.png';\n          break;\n\n        case '15':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Iguana.png';\n          break;\n\n        case '16':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Caballo.png';\n          break;\n\n        case '17':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Rana.png';\n          break;\n\n        case '18':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tiburon.png';\n          break;\n\n        case '19':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Caracol.png';\n          break;\n\n        case '20':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Oveja.png';\n          break;\n\n        case '21':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Gallo.png';\n          break;\n\n        case '22':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Abeja.png';\n          break;\n\n        case '23':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Mariposa.png';\n          break;\n\n        case '24':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Pez.png';\n          break;\n\n        case '25':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Pinguino.png';\n          break;\n\n        case '26':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Cocodrilo.png';\n          break;\n\n        case '27':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Vaca.png';\n          break;\n\n        case '28':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Chanchito.png';\n          break;\n\n        case '29':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Tigre.png';\n          break;\n\n        case '30':\n          mascotaPath = 'assets/mascotas/mascotas pozo millonario-Gato.png';\n          break;\n\n        default:\n          break;\n      }\n\n      return mascotaPath;\n    }\n\n  }\n\n  ConsultaService.ɵfac = function ConsultaService_Factory(t) {\n    return new (t || ConsultaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ConsultaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConsultaService,\n    factory: ConsultaService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConsultaService;\n})();","map":null,"metadata":{},"sourceType":"module"}