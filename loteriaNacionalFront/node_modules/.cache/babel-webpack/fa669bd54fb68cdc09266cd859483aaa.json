{"ast":null,"code":"import _asyncToGenerator from \"/home/angeloacr/Proyectos/loteriaNacional/app/loteriaNacionalFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConsultaService {\n  constructor(http) {\n    this.http = http;\n    this.today = new Date();\n    this.localSource = 'http://localhost:100';\n    this.testSource = 'https://ventas-api-prueba.loteria.com.ec';\n    this.productionSource = 'https://ventas-api.loteria.com.ec'; //mySource = this.localSource;\n    //mySource = this.testSource;\n\n    this.mySource = this.productionSource;\n  }\n\n  recuperarSorteosJugados() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let endpoint = '/cache';\n      var address = '/lotto';\n      endpoint = `${endpoint}/sorteosJugados`;\n      address = _this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        _this.http.get(address, {\n          headers: headers\n        }).subscribe(data => {\n          let sorteosJugados = data.values;\n          console.log(sorteosJugados);\n          sorteosJugados.sort(_this.ordenaSorteos);\n          resolve(sorteosJugados);\n        });\n      });\n    })();\n  }\n\n  ordenaSorteos(a, b) {\n    let a1 = a['sorteo'];\n    let b1 = b['sorteo'];\n    return b1 - a1;\n  }\n\n  recuperarBoletoGanador(sorteo, combinaciones) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let endpoint = '';\n      let address = '/lotto';\n      endpoint = `${endpoint}/ganador`;\n      address = _this2.mySource + address + endpoint;\n      let body = {\n        sorteo,\n        combinaciones\n      };\n      console.log(body);\n      return new Promise((resolve, reject) => {\n        _this2.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          let boletoGanador = data;\n          console.log(boletoGanador);\n          resolve(boletoGanador);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    })();\n  }\n\n  getUltimoResultado() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let address = '/lotto';\n      let endpoint = '/cache/ultimoResultado';\n      let auxAddress = _this3.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        _this3.http.get(auxAddress, {\n          headers: headers\n        }).subscribe(data => {\n          let response;\n          let lotto = data;\n          localStorage.setItem('lottoUltimoResultado', JSON.stringify(lotto));\n          response = {\n            tipo: 'lotto',\n            data: lotto\n          };\n          resolve(response);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    })();\n  }\n\n  obtenerBoletin(sorteo) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let sourceBoletines = `${_this4.mySource}/uploads/boletines/`;\n      return new Promise((resolve, reject) => {\n        let boletinAddress = `${sourceBoletines}T2${sorteo}.jpg`;\n        resolve(boletinAddress);\n      });\n    })();\n  }\n\n}\n\nConsultaService.ɵfac = function ConsultaService_Factory(t) {\n  return new (t || ConsultaService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nConsultaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConsultaService,\n  factory: ConsultaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/angeloacr/Proyectos/loteriaNacional/app/loteriaNacionalFront/src/app/juegos/lotto/services/consulta.service.ts"],"names":["HttpHeaders","i0","i1","ConsultaService","constructor","http","today","Date","localSource","testSource","productionSource","mySource","recuperarSorteosJugados","headers","append","endpoint","address","Promise","resolve","reject","get","subscribe","data","sorteosJugados","values","console","log","sort","ordenaSorteos","a","b","a1","b1","recuperarBoletoGanador","sorteo","combinaciones","body","post","boletoGanador","error","Error","message","getUltimoResultado","auxAddress","response","lotto","localStorage","setItem","JSON","stringify","tipo","obtenerBoletin","sourceBoletines","boletinAddress","ɵfac","ConsultaService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConsultaService {\n    constructor(http) {\n        this.http = http;\n        this.today = new Date();\n        this.localSource = 'http://localhost:100';\n        this.testSource = 'https://ventas-api-prueba.loteria.com.ec';\n        this.productionSource = 'https://ventas-api.loteria.com.ec';\n        //mySource = this.localSource;\n        //mySource = this.testSource;\n        this.mySource = this.productionSource;\n    }\n    async recuperarSorteosJugados() {\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        let endpoint = '/cache';\n        var address = '/lotto';\n        endpoint = `${endpoint}/sorteosJugados`;\n        address = this.mySource + address + endpoint;\n        return new Promise((resolve, reject) => {\n            this.http.get(address, { headers: headers }).subscribe((data) => {\n                let sorteosJugados = data.values;\n                console.log(sorteosJugados);\n                sorteosJugados.sort(this.ordenaSorteos);\n                resolve(sorteosJugados);\n            });\n        });\n    }\n    ordenaSorteos(a, b) {\n        let a1 = a['sorteo'];\n        let b1 = b['sorteo'];\n        return b1 - a1;\n    }\n    async recuperarBoletoGanador(sorteo, combinaciones) {\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        let endpoint = '';\n        let address = '/lotto';\n        endpoint = `${endpoint}/ganador`;\n        address = this.mySource + address + endpoint;\n        let body = {\n            sorteo,\n            combinaciones,\n        };\n        console.log(body);\n        return new Promise((resolve, reject) => {\n            this.http.post(address, body, { headers: headers }).subscribe((data) => {\n                let boletoGanador = data;\n                console.log(boletoGanador);\n                resolve(boletoGanador);\n            }, (error) => {\n                reject(new Error(error.error.message));\n            });\n        });\n    }\n    async getUltimoResultado() {\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        let address = '/lotto';\n        let endpoint = '/cache/ultimoResultado';\n        let auxAddress = this.mySource + address + endpoint;\n        return new Promise((resolve, reject) => {\n            this.http.get(auxAddress, { headers: headers }).subscribe((data) => {\n                let response;\n                let lotto = data;\n                localStorage.setItem('lottoUltimoResultado', JSON.stringify(lotto));\n                response = { tipo: 'lotto', data: lotto };\n                resolve(response);\n            }, (error) => {\n                reject(new Error(error.error.message));\n            });\n        });\n    }\n    async obtenerBoletin(sorteo) {\n        let sourceBoletines = `${this.mySource}/uploads/boletines/`;\n        return new Promise((resolve, reject) => {\n            let boletinAddress = `${sourceBoletines}T2${sorteo}.jpg`;\n            resolve(boletinAddress);\n        });\n    }\n}\nConsultaService.ɵfac = function ConsultaService_Factory(t) { return new (t || ConsultaService)(i0.ɵɵinject(i1.HttpClient)); };\nConsultaService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ConsultaService, factory: ConsultaService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}