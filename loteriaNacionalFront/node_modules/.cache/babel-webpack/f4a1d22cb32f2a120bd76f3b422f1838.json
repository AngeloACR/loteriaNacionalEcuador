{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let VentaService = /*#__PURE__*/(() => {\n  class VentaService {\n    constructor(http) {\n      this.http = http;\n      this.mySource = environment.source;\n    }\n\n    obtenerSorteo(authData) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json'); //let endpoint = \"/inquiry\";\n\n      let endpoint = `/cache/sorteosDisponibles`;\n      let address = '/millonaria';\n      address = this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        this.http.get(address, {\n          params: {\n            lotteryToken: authData.lotteryToken,\n            user: authData.user\n          },\n          headers: headers\n        }).subscribe(data => {\n          let sorteosDisponibles = data;\n          sorteosDisponibles.sort(this.ordenaSorteos);\n          resolve(sorteosDisponibles);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    obtenerSeries(sorteo, authData) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let endpoint = '/getSeries';\n      let address = '/millonaria';\n      address = this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        this.http.get(address, {\n          params: {\n            lotteryToken: authData.lotteryToken,\n            user: authData.user,\n            sorteo\n          },\n          headers: headers\n        }).subscribe(data => {\n          let aux = data.map(element => {\n            return {\n              serie: element,\n              status: false\n            };\n          });\n          resolve(aux);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n    ordenaSorteos(a, b) {\n      let a1 = a['sorteo'];\n      let b1 = b['sorteo'];\n      return a1 - b1;\n    }\n\n    obtenerTickets(sorteo, combinacion, combinacionFigura, tipoSeleccion, authData) {\n      let headers = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      let endpoint = '';\n      let body = {\n        sorteo,\n        lotteryToken: authData.lotteryToken,\n        user: authData.user,\n        combinacion,\n        combinacionFigura,\n        tipoSeleccion\n      };\n      endpoint = `${endpoint}/combinacionesDisponibles`;\n      let address = '/millonaria';\n      address = this.mySource + address + endpoint;\n      return new Promise((resolve, reject) => {\n        this.http.post(address, body, {\n          headers: headers\n        }).subscribe(data => {\n          let combinacionesDisponibles = data.combinaciones;\n          resolve(combinacionesDisponibles);\n        }, error => {\n          reject(new Error(error.error.message));\n        });\n      });\n    }\n\n  }\n\n  VentaService.ɵfac = function VentaService_Factory(t) {\n    return new (t || VentaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  VentaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VentaService,\n    factory: VentaService.ɵfac,\n    providedIn: 'root'\n  });\n  return VentaService;\n})();","map":null,"metadata":{},"sourceType":"module"}